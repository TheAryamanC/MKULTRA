sentence(S, Mood, Polarity, Tense, Aspect) -->
   s(S, Mood, Polarity, Tense, Aspect),
   opt_stop(Mood).

opt_stop(interrogative) --> [ '?' ].
opt_stop(_Mood) --> [ ].
opt_stop(Mood) --> [ '.' ], { Mood \= interrogative }.
opt_stop(Mood) --> [ '!' ], { Mood \= interrogative }.


%% s(?S, ?Mood, ?Polarity, ?Tense, ?Aspect)
%  Sentences

:- randomizable s//5.

%%%
%%% Indicative mood
%%%
s(S, indicative, Polarity, Tense, Aspect) -->
   np(VP^S, subject, Agreement, nogap),
   aux_vp(VP, Polarity, Agreement, Tense, Aspect).

%%%
%%% Imperative mood
%%%
s(S, imperative, Polarity, present, simple) -->
   aux_vp($addressee^S, Polarity, second:singular, present, simple).


%%%
%%% Interrogative mood
%%%

% Yes/no question generated by subject-aux inversion
s(S, interrogative, Polarity, Tense, Aspect) -->
   aux(np(VP^S, subject, Agreement),
       Polarity, Agreement, Tense, Aspect, Form, Modality),
   vp(Form, Modality, VP, Tense, Agreement, nogap).

% Wh-questions about the subject.
s(Subject:S, interrogative, Polarity, Tense, Aspect) -->
   whpron,
   aux_vp(Subject^S, Polarity, _Agreement, Tense, Aspect).
% Wh-questions about the object.
s(Object:S, interrogative, Polarity, Tense, Aspect) -->
   whpron,
   aux(np(VP^S, subject, Agreement),
       Polarity, Agreement, Tense, Aspect, Form, Modality),
   vp(Form, Modality, VP, Tense, Agreement, np(Object)).

% Who is/what is Subject
s(Object:be(Subject, Object), interrogative, affirmative, present, simple) -->
   whpron,
   aux_be(present, Agreement),
   np((Subject^S)^S, subject, Agreement, nogap).

% How is Subject?
s(Manner:manner(be(Subject), Manner), interrogative, affirmative, present, simple) -->
   [ how ],
   aux_be(present, Agreement),
   np((Subject^S)^S, subject, Agreement, nogap). 